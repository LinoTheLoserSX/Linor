--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 66 | Scripts: 1 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.coolgui
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["Name"] = [[coolgui]];
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
G2L["1"]["ResetOnSpawn"] = false;


-- StarterGui.coolgui.Manager
G2L["2"] = Instance.new("LocalScript", G2L["1"]);
G2L["2"]["Name"] = [[Manager]];


-- StarterGui.coolgui.Bar
G2L["3"] = Instance.new("Frame", G2L["1"]);
G2L["3"]["ZIndex"] = 2;
G2L["3"]["BorderSizePixel"] = 0;
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["3"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["3"]["Size"] = UDim2.new(0.4, 0, 0.1, 0);
G2L["3"]["Position"] = UDim2.new(0.5, 0, 0.3, 0);
G2L["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3"]["Name"] = [[Bar]];


-- StarterGui.coolgui.Bar.Pages
G2L["4"] = Instance.new("Frame", G2L["3"]);
G2L["4"]["BorderSizePixel"] = 0;
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
G2L["4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["4"]["Size"] = UDim2.new(1, 0, 4, 0);
G2L["4"]["Position"] = UDim2.new(0.5, 0, 3, 0);
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4"]["Name"] = [[Pages]];


-- StarterGui.coolgui.Bar.Pages.UIGradient
G2L["5"] = Instance.new("UIGradient", G2L["4"]);



-- StarterGui.coolgui.Bar.Pages.UIStroke
G2L["6"] = Instance.new("UIStroke", G2L["4"]);



-- StarterGui.coolgui.Bar.Pages.Info
G2L["7"] = Instance.new("ScrollingFrame", G2L["4"]);
G2L["7"]["Visible"] = false;
G2L["7"]["Active"] = true;
G2L["7"]["ZIndex"] = 2;
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
G2L["7"]["Name"] = [[Info]];
G2L["7"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["7"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["7"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.coolgui.Bar.Pages.Info.UIGradient
G2L["8"] = Instance.new("UIGradient", G2L["7"]);



-- StarterGui.coolgui.Bar.Pages.Info.UIPadding
G2L["9"] = Instance.new("UIPadding", G2L["7"]);
G2L["9"]["PaddingTop"] = UDim.new(0.05, 0);
G2L["9"]["PaddingRight"] = UDim.new(0.05, 0);
G2L["9"]["PaddingLeft"] = UDim.new(0.05, 0);
G2L["9"]["PaddingBottom"] = UDim.new(0.05, 0);


-- StarterGui.coolgui.Bar.Pages.Info.UIStroke
G2L["a"] = Instance.new("UIStroke", G2L["7"]);



-- StarterGui.coolgui.Bar.Pages.Info.Welcome
G2L["b"] = Instance.new("TextLabel", G2L["7"]);
G2L["b"]["TextWrapped"] = true;
G2L["b"]["BorderSizePixel"] = 0;
G2L["b"]["TextSize"] = 14;
G2L["b"]["TextScaled"] = true;
G2L["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b"]["BackgroundTransparency"] = 1;
G2L["b"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["b"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b"]["Text"] = [[Welcome { username } to Linor! ]];
G2L["b"]["Name"] = [[Welcome]];


-- StarterGui.coolgui.Bar.Pages.Info.0
G2L["c"] = Instance.new("TextLabel", G2L["7"]);
G2L["c"]["TextWrapped"] = true;
G2L["c"]["BorderSizePixel"] = 0;
G2L["c"]["TextSize"] = 14;
G2L["c"]["TextScaled"] = true;
G2L["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c"]["BackgroundTransparency"] = 1;
G2L["c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["c"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c"]["Text"] = [[Linor is a script made by @linohatesvalo.]];
G2L["c"]["Name"] = [[0]];


-- StarterGui.coolgui.Bar.Pages.Info.UIListLayout
G2L["d"] = Instance.new("UIListLayout", G2L["7"]);
G2L["d"]["Padding"] = UDim.new(0.025, 0);
G2L["d"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.coolgui.Bar.Pages.Info.1
G2L["e"] = Instance.new("TextLabel", G2L["7"]);
G2L["e"]["TextWrapped"] = true;
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["TextSize"] = 14;
G2L["e"]["TextScaled"] = true;
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["BackgroundTransparency"] = 1;
G2L["e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["e"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["Text"] = [[The script is completely free to use and open source.]];
G2L["e"]["Name"] = [[1]];


-- StarterGui.coolgui.Bar.Pages.Info.2
G2L["f"] = Instance.new("TextLabel", G2L["7"]);
G2L["f"]["TextWrapped"] = true;
G2L["f"]["BorderSizePixel"] = 0;
G2L["f"]["TextSize"] = 14;
G2L["f"]["TextScaled"] = true;
G2L["f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f"]["BackgroundTransparency"] = 1;
G2L["f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["f"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f"]["Text"] = [[If you have any questions or suggestions, feel free to share them! :)]];
G2L["f"]["Name"] = [[2]];


-- StarterGui.coolgui.Bar.Pages.Info.3
G2L["10"] = Instance.new("TextLabel", G2L["7"]);
G2L["10"]["TextWrapped"] = true;
G2L["10"]["BorderSizePixel"] = 0;
G2L["10"]["TextSize"] = 14;
G2L["10"]["TextScaled"] = true;
G2L["10"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["10"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10"]["BackgroundTransparency"] = 1;
G2L["10"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["10"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10"]["Text"] = [[It's reccomended to read the github readme before using the script.]];
G2L["10"]["Name"] = [[3]];


-- StarterGui.coolgui.Bar.Pages.Info.4
G2L["11"] = Instance.new("TextLabel", G2L["7"]);
G2L["11"]["TextWrapped"] = true;
G2L["11"]["BorderSizePixel"] = 0;
G2L["11"]["TextSize"] = 14;
G2L["11"]["TextScaled"] = true;
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["BackgroundTransparency"] = 1;
G2L["11"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["11"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11"]["Text"] = [[]];
G2L["11"]["Name"] = [[4]];


-- StarterGui.coolgui.Bar.Pages.Info.5
G2L["12"] = Instance.new("TextLabel", G2L["7"]);
G2L["12"]["TextWrapped"] = true;
G2L["12"]["BorderSizePixel"] = 0;
G2L["12"]["TextSize"] = 14;
G2L["12"]["TextScaled"] = true;
G2L["12"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["12"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12"]["BackgroundTransparency"] = 1;
G2L["12"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["12"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12"]["Text"] = [[]];
G2L["12"]["Name"] = [[5]];


-- StarterGui.coolgui.Bar.Pages.Info.6
G2L["13"] = Instance.new("TextLabel", G2L["7"]);
G2L["13"]["TextWrapped"] = true;
G2L["13"]["BorderSizePixel"] = 0;
G2L["13"]["TextSize"] = 14;
G2L["13"]["TextScaled"] = true;
G2L["13"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["13"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13"]["BackgroundTransparency"] = 1;
G2L["13"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["13"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["13"]["Text"] = [[]];
G2L["13"]["Name"] = [[6]];


-- StarterGui.coolgui.Bar.Pages.Info.7
G2L["14"] = Instance.new("TextLabel", G2L["7"]);
G2L["14"]["TextWrapped"] = true;
G2L["14"]["BorderSizePixel"] = 0;
G2L["14"]["TextSize"] = 14;
G2L["14"]["TextScaled"] = true;
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["14"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14"]["BackgroundTransparency"] = 1;
G2L["14"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["14"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14"]["Text"] = [[]];
G2L["14"]["Name"] = [[7]];


-- StarterGui.coolgui.Bar.Pages.Main
G2L["15"] = Instance.new("ScrollingFrame", G2L["4"]);
G2L["15"]["Visible"] = false;
G2L["15"]["Active"] = true;
G2L["15"]["ZIndex"] = 2;
G2L["15"]["BorderSizePixel"] = 0;
G2L["15"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
G2L["15"]["Name"] = [[Main]];
G2L["15"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["15"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["15"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.coolgui.Bar.Pages.Main.UIGradient
G2L["16"] = Instance.new("UIGradient", G2L["15"]);



-- StarterGui.coolgui.Bar.Pages.Main.UIPadding
G2L["17"] = Instance.new("UIPadding", G2L["15"]);
G2L["17"]["PaddingTop"] = UDim.new(0.025, 0);
G2L["17"]["PaddingRight"] = UDim.new(0.065, 0);
G2L["17"]["PaddingLeft"] = UDim.new(0.065, 0);
G2L["17"]["PaddingBottom"] = UDim.new(0.025, 0);


-- StarterGui.coolgui.Bar.Pages.Main.UIStroke
G2L["18"] = Instance.new("UIStroke", G2L["15"]);



-- StarterGui.coolgui.Bar.Pages.Main.GivePowerRollsLabel
G2L["19"] = Instance.new("TextLabel", G2L["15"]);
G2L["19"]["TextWrapped"] = true;
G2L["19"]["BorderSizePixel"] = 0;
G2L["19"]["TextSize"] = 14;
G2L["19"]["TextScaled"] = true;
G2L["19"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["19"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["19"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["19"]["BackgroundTransparency"] = 1;
G2L["19"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["19"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19"]["Text"] = [[Power roll amount:]];
G2L["19"]["Name"] = [[GivePowerRollsLabel]];
G2L["19"]["Position"] = UDim2.new(0.5, 0, 0.05, 0);


-- StarterGui.coolgui.Bar.Pages.Main.GivePowerRollsLabel.UIStroke
G2L["1a"] = Instance.new("UIStroke", G2L["19"]);



-- StarterGui.coolgui.Bar.Pages.Main.GivePowerRollsTextbox
G2L["1b"] = Instance.new("TextBox", G2L["15"]);
G2L["1b"]["CursorPosition"] = -1;
G2L["1b"]["Name"] = [[GivePowerRollsTextbox]];
G2L["1b"]["PlaceholderColor3"] = Color3.fromRGB(181, 181, 181);
G2L["1b"]["BorderSizePixel"] = 0;
G2L["1b"]["TextWrapped"] = true;
G2L["1b"]["TextSize"] = 14;
G2L["1b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["TextScaled"] = true;
G2L["1b"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
G2L["1b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1b"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["1b"]["PlaceholderText"] = [[100,000]];
G2L["1b"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["1b"]["Position"] = UDim2.new(0.5, 0, 0.175, 0);
G2L["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["Text"] = [[]];


-- StarterGui.coolgui.Bar.Pages.Main.GivePowerRollsTextbox.UICorner
G2L["1c"] = Instance.new("UICorner", G2L["1b"]);
G2L["1c"]["CornerRadius"] = UDim.new(0.25, 0);


-- StarterGui.coolgui.Bar.Pages.Main.GivePowerRollsTextbox.UIStroke
G2L["1d"] = Instance.new("UIStroke", G2L["1b"]);



-- StarterGui.coolgui.Bar.Pages.Main.GivePowerRollsTextbox.UIStroke
G2L["1e"] = Instance.new("UIStroke", G2L["1b"]);
G2L["1e"]["Transparency"] = 0.75;
G2L["1e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["1e"]["Thickness"] = 3;


-- StarterGui.coolgui.Bar.Pages.Main.GivePowerRollsButton
G2L["1f"] = Instance.new("TextButton", G2L["15"]);
G2L["1f"]["TextWrapped"] = true;
G2L["1f"]["BorderSizePixel"] = 0;
G2L["1f"]["TextSize"] = 14;
G2L["1f"]["TextScaled"] = true;
G2L["1f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
G2L["1f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["1f"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f"]["Text"] = [[Give power rolls]];
G2L["1f"]["Name"] = [[GivePowerRollsButton]];
G2L["1f"]["Position"] = UDim2.new(0.5, 0, 0.3, 0);


-- StarterGui.coolgui.Bar.Pages.Main.GivePowerRollsButton.UICorner
G2L["20"] = Instance.new("UICorner", G2L["1f"]);
G2L["20"]["CornerRadius"] = UDim.new(0.25, 0);


-- StarterGui.coolgui.Bar.Pages.Main.GivePowerRollsButton.UIStroke
G2L["21"] = Instance.new("UIStroke", G2L["1f"]);
G2L["21"]["Transparency"] = 0.75;
G2L["21"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["21"]["Thickness"] = 3;


-- StarterGui.coolgui.Bar.Pages.Main.GivePowerRollsButton.UIStroke
G2L["22"] = Instance.new("UIStroke", G2L["1f"]);



-- StarterGui.coolgui.Bar.Pages.Main.UsePowerRollsLabel
G2L["23"] = Instance.new("TextLabel", G2L["15"]);
G2L["23"]["TextWrapped"] = true;
G2L["23"]["BorderSizePixel"] = 0;
G2L["23"]["TextSize"] = 14;
G2L["23"]["TextScaled"] = true;
G2L["23"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["23"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["23"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["23"]["BackgroundTransparency"] = 1;
G2L["23"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["23"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["23"]["Text"] = [[Power roll amount:]];
G2L["23"]["Name"] = [[UsePowerRollsLabel]];
G2L["23"]["Position"] = UDim2.new(0.5, 0, 0.45, 0);


-- StarterGui.coolgui.Bar.Pages.Main.UsePowerRollsLabel.UIStroke
G2L["24"] = Instance.new("UIStroke", G2L["23"]);



-- StarterGui.coolgui.Bar.Pages.Main.UsePowerRollsTextbox
G2L["25"] = Instance.new("TextBox", G2L["15"]);
G2L["25"]["Name"] = [[UsePowerRollsTextbox]];
G2L["25"]["PlaceholderColor3"] = Color3.fromRGB(181, 181, 181);
G2L["25"]["BorderSizePixel"] = 0;
G2L["25"]["TextWrapped"] = true;
G2L["25"]["TextSize"] = 14;
G2L["25"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["25"]["TextScaled"] = true;
G2L["25"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
G2L["25"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["25"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["25"]["PlaceholderText"] = [[Leave blank to use all power rolls]];
G2L["25"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["25"]["Position"] = UDim2.new(0.5, 0, 0.575, 0);
G2L["25"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["25"]["Text"] = [[]];


-- StarterGui.coolgui.Bar.Pages.Main.UsePowerRollsTextbox.UICorner
G2L["26"] = Instance.new("UICorner", G2L["25"]);
G2L["26"]["CornerRadius"] = UDim.new(0.25, 0);


-- StarterGui.coolgui.Bar.Pages.Main.UsePowerRollsTextbox.UIStroke
G2L["27"] = Instance.new("UIStroke", G2L["25"]);



-- StarterGui.coolgui.Bar.Pages.Main.UsePowerRollsTextbox.UIStroke
G2L["28"] = Instance.new("UIStroke", G2L["25"]);
G2L["28"]["Transparency"] = 0.75;
G2L["28"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["28"]["Thickness"] = 3;


-- StarterGui.coolgui.Bar.Pages.Main.UsePowerRollsButton
G2L["29"] = Instance.new("TextButton", G2L["15"]);
G2L["29"]["TextWrapped"] = true;
G2L["29"]["BorderSizePixel"] = 0;
G2L["29"]["TextSize"] = 14;
G2L["29"]["TextScaled"] = true;
G2L["29"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["29"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
G2L["29"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["29"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["29"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["29"]["Text"] = [[Use power rolls]];
G2L["29"]["Name"] = [[UsePowerRollsButton]];
G2L["29"]["Position"] = UDim2.new(0.5, 0, 0.7, 0);


-- StarterGui.coolgui.Bar.Pages.Main.UsePowerRollsButton.UICorner
G2L["2a"] = Instance.new("UICorner", G2L["29"]);
G2L["2a"]["CornerRadius"] = UDim.new(0.25, 0);


-- StarterGui.coolgui.Bar.Pages.Main.UsePowerRollsButton.UIStroke
G2L["2b"] = Instance.new("UIStroke", G2L["29"]);
G2L["2b"]["Transparency"] = 0.75;
G2L["2b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["2b"]["Thickness"] = 3;


-- StarterGui.coolgui.Bar.Pages.Main.UsePowerRollsButton.UIStroke
G2L["2c"] = Instance.new("UIStroke", G2L["29"]);



-- StarterGui.coolgui.Bar.Pages.Miscallenous
G2L["2d"] = Instance.new("ScrollingFrame", G2L["4"]);
G2L["2d"]["Active"] = true;
G2L["2d"]["ZIndex"] = 2;
G2L["2d"]["BorderSizePixel"] = 0;
G2L["2d"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
G2L["2d"]["Name"] = [[Miscallenous]];
G2L["2d"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["2d"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["2d"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2d"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["2d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.coolgui.Bar.Pages.Miscallenous.UIGradient
G2L["2e"] = Instance.new("UIGradient", G2L["2d"]);



-- StarterGui.coolgui.Bar.Pages.Miscallenous.UIPadding
G2L["2f"] = Instance.new("UIPadding", G2L["2d"]);
G2L["2f"]["PaddingTop"] = UDim.new(0.025, 0);
G2L["2f"]["PaddingRight"] = UDim.new(0.065, 0);
G2L["2f"]["PaddingLeft"] = UDim.new(0.065, 0);
G2L["2f"]["PaddingBottom"] = UDim.new(0.025, 0);


-- StarterGui.coolgui.Bar.Pages.Miscallenous.UIStroke
G2L["30"] = Instance.new("UIStroke", G2L["2d"]);



-- StarterGui.coolgui.Bar.Pages.Miscallenous.UseAllCodes
G2L["31"] = Instance.new("TextButton", G2L["2d"]);
G2L["31"]["TextWrapped"] = true;
G2L["31"]["BorderSizePixel"] = 0;
G2L["31"]["TextSize"] = 14;
G2L["31"]["TextScaled"] = true;
G2L["31"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["31"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
G2L["31"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["31"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["31"]["Size"] = UDim2.new(1, 0, 0.1, 0);
G2L["31"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["31"]["Text"] = [[Use all codes]];
G2L["31"]["Name"] = [[UseAllCodes]];
G2L["31"]["Position"] = UDim2.new(0.5, 0, 0.1, 0);


-- StarterGui.coolgui.Bar.Pages.Miscallenous.UseAllCodes.UICorner
G2L["32"] = Instance.new("UICorner", G2L["31"]);
G2L["32"]["CornerRadius"] = UDim.new(0.25, 0);


-- StarterGui.coolgui.Bar.Pages.Miscallenous.UseAllCodes.UIStroke
G2L["33"] = Instance.new("UIStroke", G2L["31"]);
G2L["33"]["Transparency"] = 0.75;
G2L["33"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["33"]["Thickness"] = 3;


-- StarterGui.coolgui.Bar.Pages.Miscallenous.UseAllCodes.UIStroke
G2L["34"] = Instance.new("UIStroke", G2L["31"]);



-- StarterGui.coolgui.Bar.UIGradient
G2L["35"] = Instance.new("UIGradient", G2L["3"]);



-- StarterGui.coolgui.Bar.PageSelection
G2L["36"] = Instance.new("ScrollingFrame", G2L["3"]);
G2L["36"]["Active"] = true;
G2L["36"]["ScrollingDirection"] = Enum.ScrollingDirection.X;
G2L["36"]["BorderSizePixel"] = 0;
G2L["36"]["BackgroundColor3"] = Color3.fromRGB(26, 26, 26);
G2L["36"]["Name"] = [[PageSelection]];
G2L["36"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["36"]["Size"] = UDim2.new(1, 0, 0.5, 0);
G2L["36"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["36"]["Position"] = UDim2.new(0.5, 0, 1, 0);
G2L["36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.coolgui.Bar.PageSelection.UIGradient
G2L["37"] = Instance.new("UIGradient", G2L["36"]);



-- StarterGui.coolgui.Bar.PageSelection.UIStroke
G2L["38"] = Instance.new("UIStroke", G2L["36"]);



-- StarterGui.coolgui.Bar.PageSelection.Main
G2L["39"] = Instance.new("TextButton", G2L["36"]);
G2L["39"]["TextWrapped"] = true;
G2L["39"]["BorderSizePixel"] = 0;
G2L["39"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["39"]["TextSize"] = 14;
G2L["39"]["TextScaled"] = true;
G2L["39"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["39"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["39"]["FontFace"] = Font.new([[rbxasset://fonts/families/Kalam.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["39"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["39"]["Size"] = UDim2.new(0.25, 0, 0.2, 0);
G2L["39"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["39"]["Text"] = [[Main]];
G2L["39"]["Name"] = [[Main]];


-- StarterGui.coolgui.Bar.PageSelection.UIListLayout
G2L["3a"] = Instance.new("UIListLayout", G2L["36"]);
G2L["3a"]["Padding"] = UDim.new(0.05, 0);
G2L["3a"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
G2L["3a"]["FillDirection"] = Enum.FillDirection.Horizontal;


-- StarterGui.coolgui.Bar.PageSelection.UIPadding
G2L["3b"] = Instance.new("UIPadding", G2L["36"]);
G2L["3b"]["PaddingTop"] = UDim.new(0.025, 0);
G2L["3b"]["PaddingLeft"] = UDim.new(0.05, 0);


-- StarterGui.coolgui.Bar.PageSelection.Miscallenous
G2L["3c"] = Instance.new("TextButton", G2L["36"]);
G2L["3c"]["TextWrapped"] = true;
G2L["3c"]["BorderSizePixel"] = 0;
G2L["3c"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3c"]["TextSize"] = 14;
G2L["3c"]["TextScaled"] = true;
G2L["3c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3c"]["FontFace"] = Font.new([[rbxasset://fonts/families/Kalam.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["3c"]["Size"] = UDim2.new(0.25, 0, 0.2, 0);
G2L["3c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3c"]["Text"] = [[Miscallenous]];
G2L["3c"]["Name"] = [[Miscallenous]];


-- StarterGui.coolgui.Bar.PageSelection.Info
G2L["3d"] = Instance.new("TextButton", G2L["36"]);
G2L["3d"]["TextWrapped"] = true;
G2L["3d"]["BorderSizePixel"] = 0;
G2L["3d"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d"]["TextSize"] = 14;
G2L["3d"]["TextScaled"] = true;
G2L["3d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d"]["FontFace"] = Font.new([[rbxasset://fonts/families/Kalam.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3d"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["3d"]["Size"] = UDim2.new(0.25, 0, 0.2, 0);
G2L["3d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d"]["Text"] = [[Info]];
G2L["3d"]["Name"] = [[Info]];


-- StarterGui.coolgui.Bar.UIStroke
G2L["3e"] = Instance.new("UIStroke", G2L["3"]);
G2L["3e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.coolgui.Bar.Title
G2L["3f"] = Instance.new("TextLabel", G2L["3"]);
G2L["3f"]["TextWrapped"] = true;
G2L["3f"]["BorderSizePixel"] = 0;
G2L["3f"]["TextSize"] = 14;
G2L["3f"]["TextScaled"] = true;
G2L["3f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3f"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3f"]["BackgroundTransparency"] = 1;
G2L["3f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["3f"]["Size"] = UDim2.new(0.25, 0, 0.75, 0);
G2L["3f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3f"]["Text"] = [[Linor]];
G2L["3f"]["Name"] = [[Title]];
G2L["3f"]["Position"] = UDim2.new(0.125, 0, 0.4, 0);


-- StarterGui.coolgui.Bar.UIDragDetector
G2L["40"] = Instance.new("UIDragDetector", G2L["3"]);
G2L["40"]["SelectionModeDragSpeed"] = UDim2.new(0, 1, 0, 1);


-- StarterGui.coolgui.Bar.Close
G2L["41"] = Instance.new("TextButton", G2L["3"]);
G2L["41"]["TextWrapped"] = true;
G2L["41"]["BorderSizePixel"] = 0;
G2L["41"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["41"]["TextSize"] = 14;
G2L["41"]["TextScaled"] = true;
G2L["41"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["41"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["41"]["FontFace"] = Font.new([[rbxasset://fonts/families/Kalam.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["41"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["41"]["Size"] = UDim2.new(0.06, 0, 0.5, 0);
G2L["41"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["41"]["Text"] = [[X]];
G2L["41"]["Name"] = [[Close]];
G2L["41"]["Position"] = UDim2.new(0.95, 0, 0.4, 0);


-- StarterGui.coolgui.Bar.Game
G2L["42"] = Instance.new("TextLabel", G2L["3"]);
G2L["42"]["TextWrapped"] = true;
G2L["42"]["BorderSizePixel"] = 0;
G2L["42"]["TextSize"] = 14;
G2L["42"]["TextScaled"] = true;
G2L["42"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["42"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["42"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["42"]["BackgroundTransparency"] = 1;
G2L["42"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["42"]["Size"] = UDim2.new(0.4, 0, 0.75, 0);
G2L["42"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["42"]["Text"] = [[game name]];
G2L["42"]["Name"] = [[Game]];
G2L["42"]["Position"] = UDim2.new(0.45, 0, 0.4, 0);


-- StarterGui.coolgui.Manager
local function C_2()
local script = G2L["2"];
	local Gui = script.Parent
	local Bar = Gui:FindFirstChild('Bar')
	local Pages = Bar:FindFirstChild('Pages')
	local PageSelection = Bar:FindFirstChild('PageSelection')
	local GameLabel = Bar:FindFirstChild('Game')
	
	-- Services
	
	local TweenService = game:GetService('TweenService')
	
	-- Main stuff
	
	local LocalPlayer = game:GetService('Players').LocalPlayer
	
	-- Useful stuff
	
	local gprRM = game:GetService("ReplicatedStorage"):WaitForChild('GivePowerRollsEvent')
	local uprRM = game:GetService("ReplicatedStorage").Remotes:WaitForChild("AttemptPowerSpin")
	
	-- Variables
	
	local tabl = {}
	
	-- Gui Functions
	
	local function SetGameLabel()
		local PlaceID = game.PlaceId
		local PlaceIDs = {
			[72212564918217] = "Steal a Fish",
			[128142780900340] = "Ink Game Practice"
		}
		local Game = PlaceIDs[PlaceID]
		if not Game then GameLabel.Text = "Unknown/Unsupported game" return end
		GameLabel.Text = Game
	end
	
	for i, v in pairs(Pages:GetChildren()) do
		if v:IsA('ScrollingFrame') or v:IsA('Frame') then
			for ind, var in pairs(v:GetChildren()) do
				if var:IsA('TextLabel') or var:IsA('TextButton') then
					tabl[var.Name] = {
						VAR = var,
						TT = var.TextTransparency,
						BT = var.BackgroundTransparency
					}
				elseif var:IsA('ImageLabel') or var:IsA('ImageButton') then
					table[var.Name] = {
						VAR = var,
						TT = var.ImageTransparency,
						BT = var.BackgroundTransparency
					}
				end
			end
		end
	end
	
	local function SetPage(page)
		local tweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In)
		for i, v in pairs(Pages:GetChildren()) do
			if v:IsA('ScrollingFrame') or v:IsA('Frame') then
				for ind, var in pairs(v:GetChildren()) do
					if var:IsA('TextLabel') or var:IsA('TextButton') then
						local tween = TweenService:Create(var, tweenInfo, {
							TextTransparency = 1, 
							BackgroundTransparency = 1
						})
						tween:Play()
						if ind == #v:GetChildren() then
							tween.Completed:Wait()
							for me,cool in pairs(v:GetChildren()) do
								if cool:IsA('TextLabel') or cool:IsA('TextButton') then
									cool.Visible = false
								end
							end
						end
					elseif var:IsA('ImageLabel') or var:IsA('ImageButton') then
						local tween = TweenService:Create(var, tweenInfo, {
							ImageTransparency = 1,
							BackgroundTransparency = 1
						})
						tween:Play()
						var.Visible = false
						if ind == #v:GetChildren() then
							tween.Completed:Wait()
							for me,cool in pairs(v:GetChildren()) do
								if cool:IsA('ImageLabel') or cool:IsA('ImageButton') then
									cool.Visible = false
								end
							end
						end
					end
				end
				v.Visible = false
				if v.Name == page then
					v.Visible = true
					for ind, var in pairs(v:GetChildren()) do
						if var:IsA('TextLabel') or var:IsA('TextButton') then
							var.Visible = true
							local info = tabl[var.Name]
							local tween = TweenService:Create(info.VAR, tweenInfo, {
								TextTransparency = info.TT,
								BackgroundTransparency = info.BT
							})
							tween:Play()
							if ind == #v:GetChildren() then
								tween.Completed:Wait()
								for me, cool in pairs(v:GetChildren()) do
									if cool:IsA('TextLabel') or cool:IsA('TextButton') then
										cool.Visible = true
									end
								end
							end
						elseif var:IsA('ImageLabel') or var:IsA('ImageButton') then
							var.Visible = true
							local info = tabl[var.Name]
							local tween = TweenService:Create(info.VAR, tweenInfo, {
								TextTransparency = info.TT,
								BackgroundTransparency =  info.BT
							})
							tween:Play()
							if ind == #v:GetChildren() then
								tween.Completed:Wait()
								for me, cool in pairs(v:GetChildren()) do
									if cool:IsA('ImageLabel') or cool:IsA('ImageButton') then
										cool.Visible = true
									end
								end
							end
						end
					end
				end
			end
		end
	
	end
	
	-- Main Functions
	
	local function GivePowerRolls()
		local Rolls = Pages:FindFirstChild('Main'):FindFirstChild('GivePowerRollsTextbox').Text
		if Rolls == "" or Rolls == nil then return end
		if gprRM:IsA('RemoteEvent') then
			for l=1, math.ceil(Rolls / 3) do
				if l % 20000 == 0 then
					task.wait()
				end
				gprRM:FireServer(LocalPlayer)
			end
		end
	end
	
	local function UsePowerRolls()
		local Rolls = Pages:FindFirstChild('Main'):FindFirstChild('UsePowerRollsTextbox').Text
		if uprRM:IsA('RemoteEvent') then
		if Rolls == "" or Rolls == nil then 
			local text = LocalPlayer.PlayerGui:FindFirstChild('ShopGui'):FindFirstChild('StoreHolder'):FindFirstChild('Store'):FindFirstChild('RollBuyButtons'):FindFirstChild('RollBtn'):FindFirstChild('RemainingRolls')
			if text and text:IsA('TextLabel') then
				local IntText = string.split(text.Text, " ")[1]
				for l=1, IntText do
					if l % 10000 == 0 then
						task.wait()
					end
					uprRM:FireServer()
				end
			end
		else 
			for l=1, Rolls do
				if l % 10000 == 0 then
					task.wait()
				end
				uprRM:FireServer()
			end
		end
		end
	end
	
	local function UseAllCodes()
		
	end
	
	-- Gui Functions calls
	
	SetGameLabel()
	SetPage('Info')
	
	for i, v in pairs(PageSelection:GetChildren()) do
		if v:IsA("TextButton") or v:IsA('ImageButton') then
			v.Activated:Connect(function()
				SetPage(v.Name)
			end)
		end
	end
	
	Bar:FindFirstChild('Close').Activated:Connect(function() 
		local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.In)
		for i,v in pairs(Gui:GetDescendants()) do
			if v:IsA('TextLabel') or v:IsA('TextButton') or v:IsA('ImageLabel') or v:IsA('ImageButton') or v:IsA('Frame') or v:IsA('ScrollingFrame') then
				local tween = TweenService:Create(v, tweenInfo, {Transparency = 1})
				tween:Play()
				if i == #Gui:GetDescendants() then
					tween.Completed:Wait()
				end
			end
		end
		script.Parent:Destroy()
	end)
	
	-- Main Functions calls
	
	Pages:FindFirstChild('Main'):FindFirstChild('GivePowerRollsButton').Activated:Connect(function()
		GivePowerRolls()
	end)
	
	Pages:FindFirstChild('Main'):FindFirstChild('UsePowerRollsButton').Activated:Connect(function() 
		UsePowerRolls()
	end)
	
	Pages:FindFirstChild('Miscallenous'):FindFirstChild('UseAllCodes').Activated:Connect(function() 
		UseAllCodes()
	end)
end;
task.spawn(C_2);

return G2L["1"], require;
